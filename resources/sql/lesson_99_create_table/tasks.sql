-- Задача 1
-- Добавьте в БД таблицу airport.
-- В состав колонок в обязательном порядке должны входить автоинкрементирующийся id и имя аэропорта.
-- Остальные атрибуты могут быть добавлены на ваш вкус.
create table airport (
	id	                    bigserial,
	code                    varchar(3),
	name                    varchar(100)
);

-- Задача 2
-- Добавьте промежуточную таблицу между пассажиром и аэропортом.
-- Полагаю, вы помните, что сейчас пассажир содержит колонку с массивом любимых аэропортов.
-- Кажется, пришло время закрепить эту связь в виде классического M2M.
-- Данная промежуточная таблица должна позволить через функциональность
-- JOIN связывать пассажиров с их любимыми аэропортами.
-- Обычно такого рода таблицы именуются как table1_table2.
create table passenger_favorite_airport (
	passenger_id	        bigint,
	airport_id		        bigint
);

-- Задача 3
-- Добавьте таблицу flight. Полагаю, очевидно, что указывать в каждом билете
-- время и аэропорты отправления и прибытия - несколько избыточно, сущность,
-- эквивалентная рейсу, позволит хранить и обрабатывать эту информацию гораздо компактнее.
-- Исходя из этой информации, постарайтесь подобрать адекватный набор колонок
-- Обновление таблицы билетов сделаем уже в ближайших уроках:)
create table flight (
	id                      bigserial,
	number                  varchar (20),
	departure_airport_id    bigint,
	arrival_airport_id      bigint,
	departure_date          timestamp,
	arrival_date            timestamp
);

-- Задача 4
-- Добавьте таблицу user.
-- Она должна обеспечивать информацию об учетной записи в нашей условной информационной системе.
-- Полагаю, в нее стоит добавить id, username и пароль, остальные колонки - на ваш вкус.
create table "user" (
	id	                    bigserial,
	username                varchar(100),
	password				varchar(100)
);